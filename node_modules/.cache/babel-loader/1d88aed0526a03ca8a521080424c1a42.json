{"ast":null,"code":"var _jsxFileName = \"C:\\\\Pessoal\\\\poc-pivot\\\\src\\\\Components\\\\PivotCsv.js\";\nimport React from 'react';\nimport PivotGrid, { FieldChooser, FieldPanel } from 'devextreme-react/pivot-grid';\nimport CheckBox from 'devextreme-react/check-box';\nimport PivotGridDataSource from 'devextreme/ui/pivot_grid/data_source';\nimport sales from '../ArrayData/data.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PivotCsv extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showColumnFields: true,\n      showDataFields: true,\n      showFilterFields: true,\n      showRowFields: true\n    };\n    this.onShowColumnFieldsChanged = this.onShowColumnFieldsChanged.bind(this);\n    this.onShowDataFieldsChanged = this.onShowDataFieldsChanged.bind(this);\n    this.onShowFilterFieldsChanged = this.onShowFilterFieldsChanged.bind(this);\n    this.onShowRowFieldsChanged = this.onShowRowFieldsChanged.bind(this);\n    this.onContextMenuPreparing = this.onContextMenuPreparing.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PivotGrid, {\n        id: \"sales\",\n        dataSource: dataSource,\n        allowSortingBySummary: true,\n        allowSorting: true,\n        allowFiltering: true,\n        showBorders: true,\n        height: 490,\n        onContextMenuPreparing: this.onContextMenuPreparing,\n        children: [/*#__PURE__*/_jsxDEV(FieldPanel, {\n          showColumnFields: this.state.showColumnFields,\n          showDataFields: this.state.showDataFields,\n          showFilterFields: this.state.showFilterFields,\n          showRowFields: this.state.showRowFields,\n          allowFieldDragging: true,\n          visible: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FieldChooser, {\n          height: 500\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"caption\",\n          children: \"Options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          children: /*#__PURE__*/_jsxDEV(CheckBox, {\n            id: \"show-data-fields\",\n            value: this.state.showColumnFields,\n            onValueChanged: this.onShowColumnFieldsChanged,\n            text: \"Show Data Fields\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          children: /*#__PURE__*/_jsxDEV(CheckBox, {\n            id: \"show-row-fields\",\n            value: this.state.showDataFields,\n            onValueChanged: this.onShowDataFieldsChanged,\n            text: \"Show Row Fields\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          children: /*#__PURE__*/_jsxDEV(CheckBox, {\n            id: \"show-column-fields\",\n            value: this.state.showFilterFields,\n            onValueChanged: this.onShowFilterFieldsChanged,\n            text: \"Show Column Fields\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          children: /*#__PURE__*/_jsxDEV(CheckBox, {\n            id: \"show-filter-fields\",\n            value: this.state.showRowFields,\n            onValueChanged: this.onShowRowFieldsChanged,\n            text: \"Show Filter Fields\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n  onShowColumnFieldsChanged(e) {\n    this.setState({\n      showColumnFields: e.value\n    });\n  }\n\n  onShowDataFieldsChanged(e) {\n    this.setState({\n      showDataFields: e.value\n    });\n  }\n\n  onShowFilterFieldsChanged(e) {\n    this.setState({\n      showFilterFields: e.value\n    });\n  }\n\n  onShowRowFieldsChanged(e) {\n    this.setState({\n      showRowFields: e.value\n    });\n  }\n\n  onContextMenuPreparing(e) {\n    var sourceField = e.field;\n\n    if (sourceField) {\n      if (!sourceField.groupName || sourceField.groupIndex === 0) {\n        e.items.push({\n          text: 'Hide field',\n          onItemClick: function () {\n            var fieldIndex;\n\n            if (sourceField.groupName) {\n              fieldIndex = dataSource.getAreaFields(sourceField.area, true)[sourceField.areaIndex].index;\n            } else {\n              fieldIndex = sourceField.index;\n            }\n\n            dataSource.field(fieldIndex, {\n              area: null\n            });\n            dataSource.load();\n          }\n        });\n      }\n\n      if (sourceField.dataType === 'number') {\n        var menuItems = [];\n        e.items.push({\n          text: 'Summary Type',\n          items: menuItems\n        });\n        ['Sum', 'Avg', 'Min', 'Max'].forEach(summaryType => {\n          var summaryTypeValue = summaryType.toLowerCase();\n          menuItems.push({\n            text: summaryType,\n            value: summaryType.toLowerCase(),\n            onItemClick: function (args) {\n              setSummaryType(args, sourceField);\n            },\n            selected: e.field.summaryType === summaryTypeValue\n          });\n        });\n      }\n    }\n  }\n\n}\n\nconst dataSource = new PivotGridDataSource({\n  fields: [{\n    caption: 'TipoMvConsulta',\n    dataField: 'deTipoMvConsulta',\n    width: 250,\n    sortBySummaryField: 'ccTotal',\n    sortBySummaryPath: [],\n    sortOrder: 'desc',\n    area: 'row'\n  }, {\n    caption: 'Assunto',\n    dataField: 'deAssunto',\n    width: 250,\n    sortBySummaryField: 'ccTotal',\n    sortBySummaryPath: [],\n    sortOrder: 'desc',\n    area: 'row'\n  }, {\n    caption: 'Area',\n    dataField: 'area',\n    area: 'data',\n    sortOrder: 'desc',\n    width: 250\n  }, {\n    caption: 'Area',\n    dataField: 'cc1',\n    dataType: 'number',\n    summaryType: 'sum',\n    area: 'data'\n  }],\n  store: sales\n});\n\nfunction setSummaryType(args, sourceField) {\n  dataSource.field(sourceField.index, {\n    summaryType: args.itemData.value\n  });\n  dataSource.load();\n}\n\nexport default PivotCsv;","map":{"version":3,"sources":["C:/Pessoal/poc-pivot/src/Components/PivotCsv.js"],"names":["React","PivotGrid","FieldChooser","FieldPanel","CheckBox","PivotGridDataSource","sales","PivotCsv","Component","constructor","props","state","showColumnFields","showDataFields","showFilterFields","showRowFields","onShowColumnFieldsChanged","bind","onShowDataFieldsChanged","onShowFilterFieldsChanged","onShowRowFieldsChanged","onContextMenuPreparing","render","dataSource","e","setState","value","sourceField","field","groupName","groupIndex","items","push","text","onItemClick","fieldIndex","getAreaFields","area","areaIndex","index","load","dataType","menuItems","forEach","summaryType","summaryTypeValue","toLowerCase","args","setSummaryType","selected","fields","caption","dataField","width","sortBySummaryField","sortBySummaryPath","sortOrder","store","itemData"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PivotGrid, {\r\n  FieldChooser,\r\n  FieldPanel\r\n} from 'devextreme-react/pivot-grid';\r\nimport CheckBox from 'devextreme-react/check-box';\r\n\r\nimport PivotGridDataSource from 'devextreme/ui/pivot_grid/data_source';\r\n\r\nimport sales from '../ArrayData/data.js';\r\nclass PivotCsv extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showColumnFields: true,\r\n      showDataFields: true,\r\n      showFilterFields: true,\r\n      showRowFields: true\r\n    };\r\n    this.onShowColumnFieldsChanged = this.onShowColumnFieldsChanged.bind(this);\r\n    this.onShowDataFieldsChanged = this.onShowDataFieldsChanged.bind(this);\r\n    this.onShowFilterFieldsChanged = this.onShowFilterFieldsChanged.bind(this);\r\n    this.onShowRowFieldsChanged = this.onShowRowFieldsChanged.bind(this);\r\n    this.onContextMenuPreparing = this.onContextMenuPreparing.bind(this);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <PivotGrid\r\n          id=\"sales\"\r\n          dataSource={dataSource}\r\n          allowSortingBySummary={true}\r\n          allowSorting={true}\r\n          allowFiltering={true}\r\n          showBorders={true}\r\n          height={490}\r\n          onContextMenuPreparing={this.onContextMenuPreparing}\r\n        >\r\n          <FieldPanel\r\n            showColumnFields={this.state.showColumnFields}\r\n            showDataFields={this.state.showDataFields}\r\n            showFilterFields={this.state.showFilterFields}\r\n            showRowFields={this.state.showRowFields}\r\n            allowFieldDragging={true}\r\n            visible={true}\r\n          />\r\n          <FieldChooser height={500} />\r\n        </PivotGrid>\r\n        <div className=\"options\">\r\n          <div className=\"caption\">Options</div>\r\n          <div className=\"option\">\r\n            <CheckBox id=\"show-data-fields\"\r\n              value={this.state.showColumnFields}\r\n              onValueChanged={this.onShowColumnFieldsChanged}\r\n              text=\"Show Data Fields\" />\r\n          </div>\r\n          &nbsp;\r\n          <div className=\"option\">\r\n            <CheckBox id=\"show-row-fields\"\r\n              value={this.state.showDataFields}\r\n              onValueChanged={this.onShowDataFieldsChanged}\r\n              text=\"Show Row Fields\" />\r\n          </div>\r\n          &nbsp;\r\n          <div className=\"option\">\r\n            <CheckBox id=\"show-column-fields\"\r\n              value={this.state.showFilterFields}\r\n              onValueChanged={this.onShowFilterFieldsChanged}\r\n              text=\"Show Column Fields\" />\r\n          </div>\r\n          &nbsp;\r\n          <div className=\"option\">\r\n            <CheckBox id=\"show-filter-fields\"\r\n              value={this.state.showRowFields}\r\n              onValueChanged={this.onShowRowFieldsChanged}\r\n              text=\"Show Filter Fields\" />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  onShowColumnFieldsChanged(e) {\r\n    this.setState({ showColumnFields: e.value });\r\n  }\r\n\r\n  onShowDataFieldsChanged(e) {\r\n    this.setState({ showDataFields: e.value });\r\n  }\r\n\r\n  onShowFilterFieldsChanged(e) {\r\n    this.setState({ showFilterFields: e.value });\r\n  }\r\n\r\n  onShowRowFieldsChanged(e) {\r\n    this.setState({ showRowFields: e.value });\r\n  }\r\n\r\n  onContextMenuPreparing(e) {\r\n    var sourceField = e.field;\r\n\r\n    if (sourceField) {\r\n      if(!sourceField.groupName || sourceField.groupIndex === 0) {\r\n        e.items.push({\r\n          text: 'Hide field',\r\n          onItemClick: function() {\r\n            var fieldIndex;\r\n            if(sourceField.groupName) {\r\n              fieldIndex = dataSource.getAreaFields(sourceField.area, true)[sourceField.areaIndex].index;\r\n            } else {\r\n              fieldIndex = sourceField.index;\r\n            }\r\n\r\n            dataSource.field(fieldIndex, {\r\n              area: null\r\n            });\r\n            dataSource.load();\r\n          }\r\n        });\r\n      }\r\n\r\n      if (sourceField.dataType === 'number') {\r\n        var menuItems = [];\r\n\r\n        e.items.push({ text: 'Summary Type', items: menuItems });\r\n        ['Sum', 'Avg', 'Min', 'Max'].forEach(summaryType => {\r\n          var summaryTypeValue = summaryType.toLowerCase();\r\n\r\n          menuItems.push({\r\n            text: summaryType,\r\n            value: summaryType.toLowerCase(),\r\n            onItemClick: function(args) {\r\n              setSummaryType(args, sourceField);\r\n            },\r\n            selected: e.field.summaryType === summaryTypeValue\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst dataSource = new PivotGridDataSource({\r\n  fields: [{\r\n    caption: 'TipoMvConsulta',\r\n    dataField: 'deTipoMvConsulta',\r\n    width: 250,\r\n    sortBySummaryField: 'ccTotal',\r\n    sortBySummaryPath: [],\r\n    sortOrder: 'desc',\r\n    area: 'row'\r\n  },{ \r\n    caption: 'Assunto',\r\n    dataField: 'deAssunto',\r\n    width: 250,\r\n    sortBySummaryField: 'ccTotal',\r\n    sortBySummaryPath: [],\r\n    sortOrder: 'desc',\r\n    area: 'row'\r\n  },  {\r\n    caption: 'Area',\r\n    dataField: 'area',\r\n    area: 'data',\r\n    sortOrder: 'desc',\r\n    width: 250\r\n  } , {\r\n    caption: 'Area',\r\n    dataField: 'cc1',\r\n    dataType: 'number',\r\n    summaryType: 'sum',\r\n    area: 'data'\r\n  }],\r\n  store: sales\r\n});\r\n\r\nfunction setSummaryType(args, sourceField) {\r\n  dataSource.field(sourceField.index, {\r\n    summaryType: args.itemData.value\r\n  });\r\n\r\n  dataSource.load();\r\n}\r\nexport default PivotCsv;\r\n"]},"metadata":{},"sourceType":"module"}