{"ast":null,"code":"var _jsxFileName = \"C:\\\\Pessoal\\\\poc-pivot\\\\src\\\\Components\\\\PivotCsv.js\";\nimport React from 'react';\nimport PivotGrid, { FieldChooser, Scrolling, FieldPanel, Export } from 'devextreme-react/pivot-grid';\nimport CheckBox from 'devextreme-react/check-box';\nimport ExcelJS from 'exceljs';\nimport saveAs from 'file-saver';\nimport { exportPivotGrid } from 'devextreme/excel_exporter';\nimport PivotGridDataSource from 'devextreme/ui/pivot_grid/data_source';\nimport './styles.css';\nimport data from '../ArrayData/csv-data.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PivotCsv extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showColumnFields: true,\n      showDataFields: true,\n      showFilterFields: true,\n      showRowFields: true,\n      showTotalHeaderGrid: false,\n      TotalHeaderGrid: 'standart'\n    };\n    this.onShowColumnFieldsChanged = this.onShowColumnFieldsChanged.bind(this);\n    this.onShowDataFieldsChanged = this.onShowDataFieldsChanged.bind(this);\n    this.onShowFilterFieldsChanged = this.onShowFilterFieldsChanged.bind(this);\n    this.onShowRowFieldsChanged = this.onShowRowFieldsChanged.bind(this);\n    this.onContextMenuPreparing = this.onContextMenuPreparing.bind(this);\n  }\n\n  onShowColumnFieldsChanged(e) {\n    this.setState({\n      showColumnFields: e.value\n    });\n  }\n\n  onShowDataFieldsChanged(e) {\n    this.setState({\n      showDataFields: e.value\n    });\n  }\n\n  onShowTotalHeaderGrid(e) {\n    console.log(e);\n    this.setState({\n      showTotalHeaderGrid: true\n    });\n  }\n\n  onShowFilterFieldsChanged(e) {\n    this.setState({\n      showFilterFields: e.value\n    });\n  }\n\n  onShowRowFieldsChanged(e) {\n    this.setState({\n      showRowFields: e.value\n    });\n  }\n\n  onContextMenuPreparing(e) {\n    var sourceField = e.field;\n\n    if (sourceField) {\n      if (!sourceField.groupName || sourceField.groupIndex === 0) {\n        e.items.push({\n          text: 'Hide field',\n          onItemClick: function () {\n            var fieldIndex;\n\n            if (sourceField.groupName) {\n              fieldIndex = dataSource.getAreaFields(sourceField.area, true)[sourceField.areaIndex].index;\n            } else {\n              fieldIndex = sourceField.index;\n            }\n\n            dataSource.field(fieldIndex, {\n              area: null\n            });\n            dataSource.load();\n          }\n        });\n      }\n\n      if (sourceField.dataType === 'number') {\n        var menuItems = [];\n        e.items.push({\n          text: 'Summary Type',\n          items: menuItems\n        });\n        ['Sum', 'Avg', 'Min', 'Max'].forEach(summaryType => {\n          var summaryTypeValue = summaryType.toLowerCase();\n          menuItems.push({\n            text: summaryType,\n            value: summaryType.toLowerCase(),\n            onItemClick: function (args) {\n              setSummaryType(args, sourceField);\n            },\n            selected: e.field.summaryType === summaryTypeValue\n          });\n        });\n      }\n    }\n  }\n\n  componentDidMount() {\n    let valor = data.reduce((total, val) => {\n      if (val.cc2 != null) return total += val.cc2;else return total;\n    }, 0);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PivotGrid, {\n        id: \"sales\",\n        dataSource: dataSource,\n        allowSortingBySummary: false,\n        allowSorting: true,\n        rowHeaderLayout: this.state.TotalHeaderGrid,\n        allowFiltering: true,\n        showBorders: true,\n        height: 490,\n        onExporting: onExporting,\n        onContextMenuPreparing: this.onContextMenuPreparing,\n        children: [/*#__PURE__*/_jsxDEV(FieldPanel, {\n          showColumnFields: this.state.showColumnFields,\n          showDataFields: this.state.showDataFields,\n          showFilterFields: this.state.showFilterFields,\n          showRowFields: this.state.showRowFields,\n          allowFieldDragging: true,\n          visible: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Export, {\n          enabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FieldChooser, {\n          height: 500\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Scrolling, {\n          mode: \"virtual\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"caption\",\n          children: \"Options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          children: /*#__PURE__*/_jsxDEV(CheckBox, {\n            id: \"show-data-fields\",\n            value: this.state.showColumnFields,\n            onValueChanged: this.onShowColumnFieldsChanged,\n            text: \"Mostrar campos de coluna\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          children: /*#__PURE__*/_jsxDEV(CheckBox, {\n            id: \"show-row-fields\",\n            value: this.state.showDataFields,\n            onValueChanged: this.onShowDataFieldsChanged,\n            text: \"Mostrar campos de dados\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          children: /*#__PURE__*/_jsxDEV(CheckBox, {\n            value: this.state.showFilterFields,\n            onValueChanged: this.onShowFilterFieldsChanged,\n            text: \"Mostrar campos de filtro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          children: /*#__PURE__*/_jsxDEV(CheckBox, {\n            value: this.state.showRowFields,\n            onValueChanged: this.onShowRowFieldsChanged,\n            text: \"Mostrar campos de linha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          children: /*#__PURE__*/_jsxDEV(CheckBox, {\n            value: this.state.showRowFields,\n            onValueChanged: this.onShowTotalHeaderGrid,\n            text: \"Mostrar total no cabe\\xE7alho\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst dataSource = new PivotGridDataSource({\n  fields: [{\n    caption: 'TipoMvConsulta',\n    dataField: 'deTipoMvConsulta',\n    width: 250,\n    sortBySummaryField: 'ccTotal',\n    sortBySummaryPath: [],\n    sortOrder: 'desc',\n    area: 'row'\n  }, {\n    caption: 'Assunto',\n    dataField: 'deAssunto',\n    width: 250,\n    sortBySummaryField: 'ccTotal',\n    sortBySummaryPath: [],\n    sortOrder: 'desc',\n    area: 'row'\n  }, {\n    caption: 'Area',\n    dataField: 'area',\n    area: 'data',\n    sortBySummaryField: 'ccTotal',\n    sortOrder: 'desc',\n    width: 250\n  }, {\n    caption: 'Cc1',\n    dataField: 'cc1',\n    width: 250,\n    sortBySummaryField: 'ccTotal',\n    summaryType: 'sum',\n    sortOrder: 'desc',\n    area: 'row'\n  }, {\n    caption: 'Cc2',\n    dataField: 'cc2',\n    width: 250,\n    sortBySummaryField: 'ccTotal',\n    summaryType: 'sum',\n    sortOrder: 'desc',\n    area: 'row'\n  }, {\n    caption: 'Cc3',\n    dataField: 'cc3',\n    width: 250,\n    sortBySummaryField: 'ccTotal',\n    summaryType: 'sum',\n    sortOrder: 'desc',\n    area: 'row'\n  }, {\n    caption: 'Cc4',\n    dataField: 'cc4',\n    width: 250,\n    sortBySummaryField: 'ccTotal',\n    summaryType: 'sum',\n    sortOrder: 'desc',\n    area: 'row'\n  }, {\n    caption: 'Cc5',\n    dataField: 'cc5',\n    width: 250,\n    sortBySummaryField: 'ccTotal',\n    summaryType: 'sum',\n    sortOrder: 'desc',\n    area: 'row'\n  }, {\n    caption: 'Total',\n    dataField: 'ccTotal',\n    summaryType: 'sum',\n    area: 'data'\n  }, {\n    dataField: 'Id',\n    visible: false\n  }],\n  store: data\n});\n\nfunction onExporting(e) {\n  const workbook = new ExcelJS.Workbook();\n  const worksheet = workbook.addWorksheet('Consulta');\n  exportPivotGrid({\n    component: e.component,\n    worksheet: worksheet\n  }).then(() => {\n    workbook.xlsx.writeBuffer().then(buffer => {\n      saveAs(new Blob([buffer], {\n        type: 'application/octet-stream'\n      }), 'Tabela.xlsx');\n    });\n  });\n  e.cancel = true;\n}\n\nfunction setSummaryType(args, sourceField) {\n  dataSource.field(sourceField.index, {\n    summaryType: args.itemData.value\n  });\n  dataSource.load();\n}\n\nexport default PivotCsv;","map":{"version":3,"sources":["C:/Pessoal/poc-pivot/src/Components/PivotCsv.js"],"names":["React","PivotGrid","FieldChooser","Scrolling","FieldPanel","Export","CheckBox","ExcelJS","saveAs","exportPivotGrid","PivotGridDataSource","data","PivotCsv","Component","constructor","props","state","showColumnFields","showDataFields","showFilterFields","showRowFields","showTotalHeaderGrid","TotalHeaderGrid","onShowColumnFieldsChanged","bind","onShowDataFieldsChanged","onShowFilterFieldsChanged","onShowRowFieldsChanged","onContextMenuPreparing","e","setState","value","onShowTotalHeaderGrid","console","log","sourceField","field","groupName","groupIndex","items","push","text","onItemClick","fieldIndex","dataSource","getAreaFields","area","areaIndex","index","load","dataType","menuItems","forEach","summaryType","summaryTypeValue","toLowerCase","args","setSummaryType","selected","componentDidMount","valor","reduce","total","val","cc2","render","onExporting","fields","caption","dataField","width","sortBySummaryField","sortBySummaryPath","sortOrder","visible","store","workbook","Workbook","worksheet","addWorksheet","component","then","xlsx","writeBuffer","buffer","Blob","type","cancel","itemData"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PivotGrid, {\r\n  FieldChooser,\r\n  Scrolling,\r\n  FieldPanel,\r\n  Export\r\n} from 'devextreme-react/pivot-grid';\r\nimport CheckBox from 'devextreme-react/check-box';\r\nimport ExcelJS from 'exceljs';\r\nimport saveAs from 'file-saver';\r\nimport { exportPivotGrid } from 'devextreme/excel_exporter';\r\nimport PivotGridDataSource from 'devextreme/ui/pivot_grid/data_source';\r\nimport './styles.css';\r\nimport data from '../ArrayData/csv-data.js'\r\n\r\nclass PivotCsv extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showColumnFields: true,\r\n      showDataFields: true,\r\n      showFilterFields: true,\r\n      showRowFields: true,\r\n      showTotalHeaderGrid: false,\r\n      TotalHeaderGrid: 'standart'\r\n    };\r\n    this.onShowColumnFieldsChanged = this.onShowColumnFieldsChanged.bind(this);\r\n    this.onShowDataFieldsChanged = this.onShowDataFieldsChanged.bind(this);\r\n    this.onShowFilterFieldsChanged = this.onShowFilterFieldsChanged.bind(this);\r\n    this.onShowRowFieldsChanged = this.onShowRowFieldsChanged.bind(this);\r\n    this.onContextMenuPreparing = this.onContextMenuPreparing.bind(this);\r\n  }\r\n\r\n  onShowColumnFieldsChanged(e) {\r\n    this.setState({ showColumnFields: e.value });\r\n  }\r\n\r\n  onShowDataFieldsChanged(e) {\r\n    this.setState({ showDataFields: e.value });\r\n  }\r\n\r\n  onShowTotalHeaderGrid(e){\r\n    console.log(e);\r\n    this.setState({ showTotalHeaderGrid: true });\r\n  }\r\n\r\n  onShowFilterFieldsChanged(e) {\r\n    this.setState({ showFilterFields: e.value });\r\n  }\r\n\r\n  onShowRowFieldsChanged(e) {\r\n    this.setState({ showRowFields: e.value });\r\n  }\r\n\r\n  onContextMenuPreparing(e) {\r\n    var sourceField = e.field;\r\n\r\n    if (sourceField) {\r\n      if(!sourceField.groupName || sourceField.groupIndex === 0) {\r\n        e.items.push({\r\n          text: 'Hide field',\r\n          onItemClick: function() {\r\n            var fieldIndex;\r\n            if(sourceField.groupName) {\r\n              fieldIndex = dataSource.getAreaFields(sourceField.area, true)[sourceField.areaIndex].index;\r\n            } else {\r\n              fieldIndex = sourceField.index;\r\n            }\r\n\r\n            dataSource.field(fieldIndex, {\r\n              area: null\r\n            });\r\n            dataSource.load();\r\n          }\r\n        });\r\n      }\r\n\r\n      if (sourceField.dataType === 'number') {\r\n        var menuItems = [];\r\n\r\n        e.items.push({ text: 'Summary Type', items: menuItems });\r\n        ['Sum', 'Avg', 'Min', 'Max'].forEach(summaryType => {\r\n          var summaryTypeValue = summaryType.toLowerCase();\r\n\r\n          menuItems.push({\r\n            text: summaryType,\r\n            value: summaryType.toLowerCase(),\r\n            onItemClick: function(args) {\r\n              setSummaryType(args, sourceField);\r\n            },\r\n            selected: e.field.summaryType === summaryTypeValue\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  componentDidMount() {\r\n  let valor = data.reduce((total,val) => {\r\n    if(val.cc2 !=null) return total += val.cc2; \r\n  else return total},0)\r\n }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <PivotGrid\r\n          id=\"sales\"\r\n          dataSource={dataSource}\r\n          allowSortingBySummary={false}\r\n          allowSorting={true}\r\n          rowHeaderLayout={this.state.TotalHeaderGrid}\r\n          allowFiltering={true}\r\n          showBorders={true}\r\n          height={490}\r\n          onExporting={onExporting}\r\n          onContextMenuPreparing={this.onContextMenuPreparing}\r\n        >\r\n          <FieldPanel\r\n            showColumnFields={this.state.showColumnFields}\r\n            showDataFields={this.state.showDataFields}\r\n            showFilterFields={this.state.showFilterFields}\r\n            showRowFields={this.state.showRowFields}\r\n            allowFieldDragging={true}\r\n            visible={true}\r\n          />\r\n          <Export enabled={true} />\r\n          <FieldChooser height={500} />\r\n          <Scrolling mode=\"virtual\" />\r\n        </PivotGrid>\r\n        \r\n        <div className=\"options\">\r\n          <div className=\"caption\">Options</div>\r\n          <div className=\"option\">\r\n            <CheckBox id=\"show-data-fields\"\r\n              value={this.state.showColumnFields}\r\n              onValueChanged={this.onShowColumnFieldsChanged}\r\n              text=\"Mostrar campos de coluna\" />\r\n          </div>\r\n          &nbsp;\r\n          <div className=\"option\">\r\n            <CheckBox id=\"show-row-fields\"\r\n              value={this.state.showDataFields}\r\n              onValueChanged={this.onShowDataFieldsChanged}\r\n              text=\"Mostrar campos de dados\" />\r\n          </div>\r\n          &nbsp;\r\n          <div className=\"option\">\r\n            <CheckBox\r\n              value={this.state.showFilterFields}\r\n              onValueChanged={this.onShowFilterFieldsChanged}\r\n              text=\"Mostrar campos de filtro\" />\r\n          </div>\r\n          &nbsp;\r\n          <div className=\"option\">\r\n            <CheckBox \r\n              value={this.state.showRowFields}\r\n              onValueChanged={this.onShowRowFieldsChanged}\r\n              text=\"Mostrar campos de linha\" />\r\n          </div>\r\n          &nbsp;\r\n          <div className=\"option\">\r\n            <CheckBox \r\n              value={this.state.showRowFields}\r\n              onValueChanged={this.onShowTotalHeaderGrid}\r\n              text=\"Mostrar total no cabeçalho\" />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst dataSource = new PivotGridDataSource({\r\n  fields: [{\r\n    caption: 'TipoMvConsulta',\r\n    dataField: 'deTipoMvConsulta',\r\n    width: 250,\r\n    sortBySummaryField: 'ccTotal',\r\n    sortBySummaryPath: [],\r\n    sortOrder: 'desc',\r\n    area: 'row'\r\n  }, { \r\n    caption: 'Assunto',\r\n    dataField: 'deAssunto',\r\n    width: 250,\r\n    sortBySummaryField: 'ccTotal',\r\n    sortBySummaryPath: [],\r\n    sortOrder: 'desc',\r\n    area: 'row'\r\n  },  {\r\n    caption: 'Area',\r\n    dataField: 'area',\r\n    area: 'data',\r\n    sortBySummaryField: 'ccTotal',\r\n    sortOrder: 'desc',\r\n    width: 250\r\n  } , {\r\n    caption: 'Cc1',\r\n    dataField: 'cc1',\r\n    width: 250,\r\n    sortBySummaryField: 'ccTotal',\r\n    summaryType: 'sum',\r\n    sortOrder: 'desc',\r\n    area: 'row'\r\n  }, {\r\n    caption: 'Cc2',\r\n    dataField: 'cc2',\r\n    width: 250,\r\n    sortBySummaryField: 'ccTotal',\r\n    summaryType: 'sum',\r\n    sortOrder: 'desc',\r\n    area: 'row'\r\n  }, {\r\n    caption: 'Cc3',\r\n    dataField: 'cc3',\r\n    width: 250,\r\n    sortBySummaryField: 'ccTotal',\r\n    summaryType: 'sum',\r\n    sortOrder: 'desc',\r\n    area: 'row'\r\n  }, {\r\n    caption: 'Cc4',\r\n    dataField: 'cc4',\r\n    width: 250,\r\n    sortBySummaryField: 'ccTotal',\r\n    summaryType: 'sum',\r\n    sortOrder: 'desc',\r\n    area: 'row'\r\n  }, {\r\n    caption: 'Cc5',\r\n    dataField: 'cc5',\r\n    width: 250,\r\n    sortBySummaryField: 'ccTotal',\r\n    summaryType: 'sum',\r\n    sortOrder: 'desc',\r\n    area: 'row'\r\n  },{\r\n    caption: 'Total',\r\n    dataField: 'ccTotal',\r\n    summaryType: 'sum',\r\n    area: 'data'\r\n  } ,{\r\n    dataField: 'Id',\r\n    visible: false\r\n  }],\r\n  store:data\r\n});\r\n\r\nfunction onExporting(e) {\r\n  const workbook = new ExcelJS.Workbook();\r\n  const worksheet = workbook.addWorksheet('Consulta');\r\n\r\n  exportPivotGrid({\r\n    component: e.component,\r\n    worksheet: worksheet\r\n  }).then(() => {\r\n    workbook.xlsx.writeBuffer().then((buffer) => {\r\n      saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'Tabela.xlsx');\r\n    });\r\n  });\r\n  e.cancel = true;\r\n}\r\n\r\nfunction setSummaryType(args, sourceField) {\r\n  dataSource.field(sourceField.index, {\r\n    summaryType: args.itemData.value\r\n  });\r\n\r\n  dataSource.load();\r\n}\r\n\r\nexport default PivotCsv;\r\n"]},"metadata":{},"sourceType":"module"}