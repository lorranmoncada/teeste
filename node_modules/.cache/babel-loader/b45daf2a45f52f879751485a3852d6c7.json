{"ast":null,"code":"/**\r\n * DevExtreme (exporter/exceljs/export_pivot_grid.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.exportPivotGrid = exportPivotGrid;\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _export = require(\"./export\");\n\nvar _common = require(\"../../core/utils/common\");\n\nvar privateOptions = {\n  _getWorksheetFrozenState: function (dataProvider, cellRange) {\n    return {\n      state: \"frozen\",\n      xSplit: cellRange.from.column + dataProvider.getFrozenArea().x - 1,\n      ySplit: cellRange.from.row + dataProvider.getFrozenArea().y - 1\n    };\n  },\n  _getCustomizeCellOptions: function (excelCell, pivotCell) {\n    return {\n      excelCell: excelCell,\n      pivotCell: pivotCell\n    };\n  },\n  _needMergeRange: function () {\n    return true;\n  },\n  _renderLoadPanel: function (component) {\n    component._renderLoadPanel(component._dataArea.groupElement(), component.$element());\n  },\n  _trySetAutoFilter: _common.noop,\n  _trySetFont: _common.noop,\n  _trySetOutlineLevel: _common.noop\n};\n\nfunction exportPivotGrid(options) {\n  return _export.Export.export(_getFullOptions(options), privateOptions);\n}\n\nfunction _getFullOptions(options) {\n  if (!((0, _type.isDefined)(options) && (0, _type.isObject)(options))) {\n    throw Error('The \"exportPivotGrid\" method requires a configuration object.');\n  }\n\n  if (!((0, _type.isDefined)(options.component) && (0, _type.isObject)(options.component) && \"dxPivotGrid\" === options.component.NAME)) {\n    throw Error('The \"component\" field must contain a PivotGrid instance.');\n  }\n\n  return _export.Export.getFullOptions(options);\n}","map":{"version":3,"sources":["C:/Pessoal/poc-pivot/node_modules/devextreme/exporter/exceljs/export_pivot_grid.js"],"names":["exports","exportPivotGrid","_type","require","_export","_common","privateOptions","_getWorksheetFrozenState","dataProvider","cellRange","state","xSplit","from","column","getFrozenArea","x","ySplit","row","y","_getCustomizeCellOptions","excelCell","pivotCell","_needMergeRange","_renderLoadPanel","component","_dataArea","groupElement","$element","_trySetAutoFilter","noop","_trySetFont","_trySetOutlineLevel","options","Export","export","_getFullOptions","isDefined","isObject","Error","NAME","getFullOptions"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,OAAO,CAACC,eAAR,GAA0BA,eAA1B;;AACA,IAAIC,KAAK,GAAGC,OAAO,CAAC,uBAAD,CAAnB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAArB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,yBAAD,CAArB;;AACA,IAAIG,cAAc,GAAG;AACjBC,EAAAA,wBAAwB,EAAE,UAASC,YAAT,EAAuBC,SAAvB,EAAkC;AACxD,WAAO;AACHC,MAAAA,KAAK,EAAE,QADJ;AAEHC,MAAAA,MAAM,EAAEF,SAAS,CAACG,IAAV,CAAeC,MAAf,GAAwBL,YAAY,CAACM,aAAb,GAA6BC,CAArD,GAAyD,CAF9D;AAGHC,MAAAA,MAAM,EAAEP,SAAS,CAACG,IAAV,CAAeK,GAAf,GAAqBT,YAAY,CAACM,aAAb,GAA6BI,CAAlD,GAAsD;AAH3D,KAAP;AAKH,GAPgB;AAQjBC,EAAAA,wBAAwB,EAAE,UAASC,SAAT,EAAoBC,SAApB,EAA+B;AACrD,WAAO;AACHD,MAAAA,SAAS,EAAEA,SADR;AAEHC,MAAAA,SAAS,EAAEA;AAFR,KAAP;AAIH,GAbgB;AAcjBC,EAAAA,eAAe,EAAE,YAAW;AACxB,WAAO,IAAP;AACH,GAhBgB;AAiBjBC,EAAAA,gBAAgB,EAAE,UAASC,SAAT,EAAoB;AAClCA,IAAAA,SAAS,CAACD,gBAAV,CAA2BC,SAAS,CAACC,SAAV,CAAoBC,YAApB,EAA3B,EAA+DF,SAAS,CAACG,QAAV,EAA/D;AACH,GAnBgB;AAoBjBC,EAAAA,iBAAiB,EAAEvB,OAAO,CAACwB,IApBV;AAqBjBC,EAAAA,WAAW,EAAEzB,OAAO,CAACwB,IArBJ;AAsBjBE,EAAAA,mBAAmB,EAAE1B,OAAO,CAACwB;AAtBZ,CAArB;;AAyBA,SAAS5B,eAAT,CAAyB+B,OAAzB,EAAkC;AAC9B,SAAO5B,OAAO,CAAC6B,MAAR,CAAeC,MAAf,CAAsBC,eAAe,CAACH,OAAD,CAArC,EAAgD1B,cAAhD,CAAP;AACH;;AAED,SAAS6B,eAAT,CAAyBH,OAAzB,EAAkC;AAC9B,MAAI,EAAE,CAAC,GAAG9B,KAAK,CAACkC,SAAV,EAAqBJ,OAArB,KAAiC,CAAC,GAAG9B,KAAK,CAACmC,QAAV,EAAoBL,OAApB,CAAnC,CAAJ,EAAsE;AAClE,UAAMM,KAAK,CAAC,+DAAD,CAAX;AACH;;AACD,MAAI,EAAE,CAAC,GAAGpC,KAAK,CAACkC,SAAV,EAAqBJ,OAAO,CAACR,SAA7B,KAA2C,CAAC,GAAGtB,KAAK,CAACmC,QAAV,EAAoBL,OAAO,CAACR,SAA5B,CAA3C,IAAqF,kBAAkBQ,OAAO,CAACR,SAAR,CAAkBe,IAA3H,CAAJ,EAAsI;AAClI,UAAMD,KAAK,CAAC,0DAAD,CAAX;AACH;;AACD,SAAOlC,OAAO,CAAC6B,MAAR,CAAeO,cAAf,CAA8BR,OAA9B,CAAP;AACH","sourcesContent":["/**\r\n * DevExtreme (exporter/exceljs/export_pivot_grid.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.exportPivotGrid = exportPivotGrid;\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _export = require(\"./export\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar privateOptions = {\r\n    _getWorksheetFrozenState: function(dataProvider, cellRange) {\r\n        return {\r\n            state: \"frozen\",\r\n            xSplit: cellRange.from.column + dataProvider.getFrozenArea().x - 1,\r\n            ySplit: cellRange.from.row + dataProvider.getFrozenArea().y - 1\r\n        }\r\n    },\r\n    _getCustomizeCellOptions: function(excelCell, pivotCell) {\r\n        return {\r\n            excelCell: excelCell,\r\n            pivotCell: pivotCell\r\n        }\r\n    },\r\n    _needMergeRange: function() {\r\n        return true\r\n    },\r\n    _renderLoadPanel: function(component) {\r\n        component._renderLoadPanel(component._dataArea.groupElement(), component.$element())\r\n    },\r\n    _trySetAutoFilter: _common.noop,\r\n    _trySetFont: _common.noop,\r\n    _trySetOutlineLevel: _common.noop\r\n};\r\n\r\nfunction exportPivotGrid(options) {\r\n    return _export.Export.export(_getFullOptions(options), privateOptions)\r\n}\r\n\r\nfunction _getFullOptions(options) {\r\n    if (!((0, _type.isDefined)(options) && (0, _type.isObject)(options))) {\r\n        throw Error('The \"exportPivotGrid\" method requires a configuration object.')\r\n    }\r\n    if (!((0, _type.isDefined)(options.component) && (0, _type.isObject)(options.component) && \"dxPivotGrid\" === options.component.NAME)) {\r\n        throw Error('The \"component\" field must contain a PivotGrid instance.')\r\n    }\r\n    return _export.Export.getFullOptions(options)\r\n}\r\n"]},"metadata":{},"sourceType":"script"}